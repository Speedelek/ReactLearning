{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","useState","title","setTitle","amount","onClick","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onCancler","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.0ec5be11.chunk.js","sourcesContent":["import './Card.css';\n\nconst Card = (props) => {\n    const classes = 'card ' + props.className\n    return <div className={classes}>{props.children}</div>\n}\n\nexport default Card;","import './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value)\n  };\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import './ExpenseDate.css'\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import React, { useState } from 'react'\n\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n  const [title, setTitle] = useState(props.title);\n\n  const clickHandler = () => {\n    setTitle(\"Updated!\");\n  };\n \n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date}/>\n      <div className=\"expense-item__description\">\n        <h2>{title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n      <button onClick={clickHandler}>Change title</button>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return (\n        <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>\n    );\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\n\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"char-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\n\nimport './Chart.css';\nimport ChartBar from \"./ChartBar\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = props => {\n  const chartDataPoints = [\n      { label: 'Jan', value: 0},\n      { label: 'Feb', value: 0},\n      { label: 'Mar', value: 0},\n      { label: 'Apr', value: 0},\n      { label: 'May', value: 0},\n      { label: 'Jun', value: 0},\n      { label: 'Jul', value: 0},\n      { label: 'Aug', value: 0},\n      { label: 'Sep', value: 0},\n      { label: 'Oct', value: 0},\n      { label: 'Nov', value: 0},\n      { label: 'Dec', value: 0},\n  ];\n\n  for (const expense of props.expenses) {\n      const expenseMonth = expense.date.getMonth();\n      chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints}/>\n};\n\nexport default ExpensesChart;","import React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport \"./Expenses.css\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <li>\n      <div>\n        <Card className=\"expenses\">\n          <ExpensesFilter\n            selected={filteredYear}\n            onChangeFilter={filterChangeHandler}\n          />\n          <ExpensesChart expenses={filteredExpenses}/>\n          <ExpensesList items={filteredExpenses} />\n        </Card>\n      </div>\n    </li>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  // const [userInput, setUserInput] = useState({\n  //     enteredTitle: '',\n  //     enteredAmount: '',\n  //     enteredDate: '',\n  // });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // setUserInput({\n    //     ...userInput,\n    //     enteredTitle: event.target.value,\n    // })\n    // setUserInput((prevState) => {\n    //     return { ...prevState, enteredTitle: event.target.value };\n    // })\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // setUserInput({\n    //     ...userInput,\n    //     enteredAmount: event.target.value,\n    // })\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    // setUserInput({\n    //     ...userInput,\n    //     enteredDate: event.target.value,\n    // })\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n    \n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancler}>Cancel</button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n      {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancler={stopEditingHandler} />}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}